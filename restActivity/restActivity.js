fetch('https://jsonplaceholder.typicode.com/todos/1')
      .then(response => response.json())
      .then(json => console.log(json))

// ID buttons
let allPostsButton = document.getElementById('allPosts')
let postIdButton = document.getElementById('postId')
let newPostButton = document.getElementById('newPost')
let replacePostButton = document.getElementById('replacePost')
let updatePostButton = document.getElementById('updatePost')
let deletePostButton = document.getElementById('deletePost')
let showResults = document.getElementById('showResults')
let hideResults = document.getElementById('hideResults')


// render result
function showResult() {
  showResults.innerHTML = '';
  showResults.style.display = 'block';
  
}

// hide results from previous actions
function hideResult() {
  hideResults.innerHTML = '';
  hideResults.style.display = 'none';
}

//get all posts

function allPosts() {
      fetch('https://jsonplaceholder.typicode.com/posts')
      .then(response => response.json())
      .then ((json => console.log(json)));
}

//get post with id of 10

function postId() {
      fetch(`https://jsonplaceholder.typicode.com/posts/10`)
     .then(response => response.json())
     .then((json => console.log(json)));
}

//create a new post and log  the id generated by the server

function newPost() {
  fetch('https://jsonplaceholder.typicode.com/posts', {
  method: 'POST',
  body: JSON.stringify({
    title: 'New Post',
    body: 'a new post',
    userId: 1,
  }),
  headers: {
    'Content-type': 'application/json; charset=UTF-8',
  },
})
  .then((response) => response.json())
  .then((json) => console.log(json));
}

//replace the post with id 12 and render the responseJSON

function replacePost() {
  fetch(`https://jsonplaceholder.typicode.com/posts/12`, {
  method: 'PUT',
  body: JSON.stringify({
    title: 'Replaced Post',
    body: 'i replaced the post',
    userId: 1
  }),
  headers: {
    'Content-type': 'application/json; charset=UTF-8',
  },
})
 .then((response) => response.json())
 .then((json) => console.log(json));
}

//update the title of the post with id 12 and render the responseJSON

function updatePost() {
  fetch(`https://jsonplaceholder.typicode.com/posts/12`, {
  method: 'PUT',
  body: JSON.stringify({
    title: 'Updated Title',
  }),
  headers: {
    'Content-type': 'application/json; charset=UTF-8',
  },
})
.then((response) => response.json())
.then((json) => console.log(json));
}

//delete the post with id 12 and render success message

function deletePost() {
  fetch(`https://jsonplaceholder.typicode.com/posts/12`, {
  method: 'DELETE',
  headers: {
    'Content-type': 'application/json; charset=UTF-8',
  },
})
.then((response) => response.json())
.then(() => console.log('this post is deleted'));
};


// add event listeners

allPostsButton.addEventListener('click', allPosts)
postIdButton.addEventListener('click', postId)
newPostButton.addEventListener('click', newPost)
replacePostButton.addEventListener('click', replacePost)
updatePostButton.addEventListener('click', updatePost)
deletePostButton.addEventListener('click', deletePost)

